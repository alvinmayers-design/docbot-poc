name: PR Docs (ALVIN MVP)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR head (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute diff & detect changes
        id: diff
        run: |
          set -euo pipefail
          BASE="${{ github.event.pull_request.base.sha }}"

          git diff --name-only "$BASE" "$HEAD" | tee changed_files.txt
          CHANGED="$(wc -l < changed_files.txt | tr -d ' ')"
          if [ "$CHANGED" -gt 0 ]; then
            echo "files_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "files_changed=false" >> "$GITHUB_OUTPUT"
          fi

        if: steps.diff.outputs.files_changed == 'true'
        run: |
          set -euo pipefail
          pr_title="${{ github.event.pull_request.title }}"
          pr_body="${{ github.event.pull_request.body }}"
          if [ -z "$pr_body" ] || [ "$pr_body" = "null" ]; then
            pr_body="(No description provided in PR)"
          fi
          {
            echo "You are a senior developer writing clear, concise PR documentation."
            echo
            echo "=== PR Title ==="
            echo "$pr_title"
            echo
            echo "=== PR Description ==="
            echo "$pr_body"
            echo
            echo "=== Code Diff (truncated) ==="
            sed 's/`/'"''"'/g' code_diff.txt
          } > prompt_final.txt

      - name: Call OpenAI
        if: steps.diff.outputs.files_changed == 'true'
        id: llm
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          sudo apt-get update >/dev/null && sudo apt-get install -y jq >/dev/null

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: alvin-debug
          path: |
            changed_files.txt
            code_diff.txt
            prompt_final.txt
            openai_resp.json
            pr_docs.md
          if-no-files-found: ignore
          retention-days: 3


        if: steps.llm.outputs.ok == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('pr_docs.md','utf8').trim();
            if (body) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body
              });
            } else {
              core.setFailed('Generated doc was empty.');
            }

